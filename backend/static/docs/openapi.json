{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Store App API",
    "description": "An API for store app"
  },
  "paths": {
    "/categories": {
      "get": {
        "summary": "Get categories list",
        "tags": [
          "Category"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "summary": "Create new category",
        "tags": [
          "Category"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Category object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "summary": "Get category",
        "tags": [
          "Category"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "put": {
        "summary": "Update category",
        "tags": [
          "Category"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Category object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input\""
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "delete": {
        "summary": "Deletes a category",
        "tags": [
          "Category"
        ],
        "produces": [
          "application/plaintext"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/types": {
      "get": {
        "summary": "Get types list",
        "tags": [
          "Type"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "summary": "Create new type",
        "tags": [
          "Type"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Type object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Type"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/types/{id}": {
      "get": {
        "summary": "Get type",
        "tags": [
          "Type"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "type not found"
          }
        }
      },
      "put": {
        "summary": "Update type",
        "tags": [
          "Type"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Type object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Type"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input\""
          },
          "404": {
            "description": "Type not found"
          }
        }
      },
      "delete": {
        "summary": "Deletes a type",
        "tags": [
          "Type"
        ],
        "produces": [
          "application/plaintext"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Type id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "404": {
            "description": "Type not found"
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get products list",
        "tags": [
          "Product"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filter[name]",
            "type": "string",
            "description": "Filter products by name"
          },
          {
            "in": "query",
            "name": "filter[sku]",
            "type": "string",
            "description": "Filter products by name"
          },
          {
            "in": "query",
            "name": "filter[category]",
            "type": "integer",
            "description": "Filter products by category name"
          },
          {
            "in": "query",
            "name": "filter[type]",
            "type": "integer",
            "description": "Filter products by type name"
          },
          {
            "in": "query",
            "name": "filter[stocks]",
            "type": "integer",
            "description": "Filter products by stocks"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "summary": "Create new product",
        "tags": [
          "Product"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/products/bulk-edit": {
      "put": {
        "summary": "Bulk edit products",
        "tags": [
          "Product"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "description": "Product object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkProduct"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input\""
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get product",
        "tags": [
          "Product"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "summary": "Update product",
        "tags": [
          "Product"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input\""
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "summary": "Deletes a product",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "in": "path",
            "description": "Product id to delete",
            "required": true
          }
        ],
        "responses": {
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/products/{id}/reserve-product": {
      "put": {
        "summary": "Reserve product",
        "tags": [
          "Product"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "stock_reserve",
            "type": "integer",
            "format": "int64",
            "minimun": 1
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input\""
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Type": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "required": [
        "name",
        "sku",
        "category_id",
        "type_id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "stocks": {
          "type": "integer",
          "format": "int64",
          "minimun": 0
        },
        "stock_reserve": {
          "type": "integer",
          "format": "int64",
          "required": false,
          "minimun": 1
        },
        "category_id": {
          "type": "integer",
          "format": "int64"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BulkProduct": {
      "type": "object",
      "required": [
        "ids",
        "fields"
      ],
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "fields": {
          "$ref": "#/definitions/Product"
        }
      }
    }
  }
}